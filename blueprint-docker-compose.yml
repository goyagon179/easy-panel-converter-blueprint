version: "3.8"

services:
  # Pterodactyl Panel (with Blueprint Framework)
  panel:
    image: ghcr.io/blueprintframework/blueprint:latest
    container_name: pterodactyl-panel
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-http://localhost}
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-pterodactyl}
      - DB_USERNAME=${DB_USERNAME:-pterodactyl}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - MAIL_DRIVER=smtp
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
    volumes:
      - pterodactyl_app:/var/www/html
      - extensions:/var/www/html/extensions
    depends_on:
      - mysql
      - redis
    networks:
      - pterodactyl

  # MySQL Database
  mysql:
    image: mariadb:10.11
    container_name: pterodactyl-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE:-pterodactyl}
      MYSQL_USER: ${DB_USERNAME:-pterodactyl}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - pterodactyl

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: pterodactyl-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - pterodactyl

  # Wings (Pterodactyl Daemon)
  wings:
    image: ghcr.io/pterodactyl/wings:latest
    container_name: pterodactyl-wings
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - WINGS_UUID=${WINGS_UUID}
      - WINGS_TOKEN=${WINGS_TOKEN}
      - WINGS_NODE_ID=${WINGS_NODE_ID}
      - WINGS_REMOTE=${WINGS_REMOTE:-http://panel:80}
      - WINGS_USER=wings
      - WINGS_GROUP=wings
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - wings_data:/var/lib/pterodactyl
      - wings_logs:/var/log/pterodactyl
    depends_on:
      - panel
    networks:
      - pterodactyl

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: pterodactyl-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - pterodactyl_app:/var/www/html:ro
    depends_on:
      - panel
    networks:
      - pterodactyl

volumes:
  pterodactyl_app:
    driver: local
  mysql_data:
    driver: local
  redis_data:
    driver: local
  wings_data:
    driver: local
  wings_logs:
    driver: local
  extensions:
    driver: local

networks:
  pterodactyl:
    driver: bridge
